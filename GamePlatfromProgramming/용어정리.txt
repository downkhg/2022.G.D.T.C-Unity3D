[Window/IE/보안]엑티브엑스:

[OS/보안]앱데이터폴더: 일반적으로 사용자 권한과 상관없이 해당 앱만 사용할수 있는 폴더. 다른경로는 접속할수없다.
유니티(스트리밍에셋)

[Android]그레들: 안드로이드 스튜디오로 넘어오면서 자동화 빌드가 작동하는 것.

[디자인패턴]래퍼: 특정 API를 함수로 감싸서 사용하기 편리하게만드는 패턴. 

[사이트]스택오버플로우: 구글에 에러코드를 검색하면 자주 등장함. 대부분 여기서 해결책을 찾을수있음.
*한국어자료는 도움이 안되는 경우가 많음.

[메모리]스택오버플로우:

[기기]에뮬레이터: 하드웨어의 구조를 소프트웨어로 흉내내어 똑같이 작동하도록 만드는것.
예) 안드로이드에뮬레이터,콘솔(아케이드)에뮬레이터 

[기초용어]시뮬레이터:

[플랫폼]네이티브API:

[프로그래밍기초]함수의 선언: 
[프로그래밍기초]함수의 정의:
[프로그래밍기초]리소스:

[프로그래밍기초/운영체제/개념]프로세스: 하나의 처리단위. 보통 앱단위에서 main함수에가 프로세스로 볼수있다.
[프로그래밍기초/운영체제/개념]스레드: 프로세스의 하위단위로 프로세스와 동시에 처리되는 흐름.
[프로그래밍응용/플랫폼/개념]테스크/Async: 스레드풀에 잡스케쥴러를 이용하여 효율적인 분산처리

[프로그래밍기초/객체지향]static class: 모든멤버를 정적멤버로 선언해야함.(싱글톤 처럼 사용가능)

[프로그래밍응용]메세지루프:
[프로그래밍응용/개념]CallBack:
[프로그래밍응용/절차지향]함수포인터:

[프로그래밍응용/개념]핸들러: 내가 원하는 방향으로 컨트롤하는 것.(조향장치)
[프로그래밍응용/개념]메세지: 내가 원하는 것을 대상에게 전달함.
[프로그래밍응용]디버깅: 실수를 찾아내는것. 로깅/툴이용
[프로그래밍응용/절차지향]함수의 참조를 성립시키려면, 함수의 포인터를 이용하여 전달하는 방법이 있다.

[프로그래밍응용/객체지향]추상화: 대상을 분석하고 객체에 필요한 동작과 속성을 정의하는 것. 
[프로그래밍응용/개념]컨텍스트스위칭: 프로세스에서 스레드로 전환할때 준비작업을 하는 것. - 작업을 분배하고 나누는데 준비하는 시간
[프로그래밍응용/개념]오버헤드: 처리가 비효율 적인 부분 - 작업분배를 위해서 사용하는 시간.

[프로그래밍응용/자료구조]큐: 뒤에서 자료가 추가되고 앞으로 나감. 즉, 데이터가 순서대로 처리됨.
[프로그래밍응용/개념/풀]메세지풀,오브젝트풀,스레드풀: 데이터를 쌓아놓는 공간. 자료구조에 주로 저장한다.

[프로그래밍응용/개념/비동기화]잡스캐쥴러: 작업을 순서대로 관리함(큐)
[프로그래밍응용/개념]잡스틸링: 다른작업을 가져와서 대신 처리하는 것 - A의 작업이 끝나 여유시간에 B의 작업을 가져와서 처리하는 것.
[프로그래밍응용/개념]스래드풀: 

[개념]플랫폼: 발판. 어떠한 서비스를 제공하는데 필요한 서비스. 예) 유튜브,카카오,구글,AWS(아마존웹서비스),로블럭스(플렛폼게임)
[소프트웨어]플랫폼: 
API(App Programming Interface)-플랫폼에 서비스를 이용하는데 사용하여 호출하는 함수, << 카카오/네이버/구글API
OS-하드웨어와 상관없이 코드를 작성하여 기기를 작동시킬수있는 소프트웨어. <<
웹(Web): 웹페이지 주소를 알면 접속할수 있는 서비스.
앱(App): 기기의 제어가 필요한 경우 서비스를 앱으로 만든다.
하이드리드앱: 웹을 기본적인 GUI매체로 사용하고 실제 기기 제어가 필요한부분만 하드웨어의 API를 이용하여 구현하는 앱.
패키지: 어떤 소프트웨어를 사서 해당 플랫폼에 연결하면 사용할수 있는 소프트웨어. -  물류중요. - 불법복제가 많음.
앱스토어: 누구나 쉽게 검색하여 앱을 다운로드받거나 구매할 수 있다. - 인터넷에 접속하여 다운로드 가능함.
크로스플렛폼: 두가지 이상 플렛폼을 동시에 지원하는 서비스. 여러운영체제/기기에서 같이 돌아가는 게임.

안드로이드에서만 작동하는 토스트메세지를 대신해서 윈도우에서 작동가능한 수단을 만드는것.
WindowForm: c#으로 구현하여 GUI를 제작할수있는 API
라이브러리: 함수들의 집합.
WindowFormLibrary: WindowForm API의 집합.
닷넷(.Net):
모노(Mono):
IL2CPP:

[경험/지식을 통하여 설명] 경험||지식 < 경험+지식
콜백함수는 어떻게 작동되는가?(함수포인터와 연관)
지식: 함수포인터, 함수주소값, 참조 
연관: 콜백, v-ptr, 델리게이트, 람다
콜백함수를 참조시키면 윈도우에서 해당 함수를 함수포인터를 통하여 호출 할 수 있게 된다.
사용자가 메세지에 따라서 코드를 작성하면 프로그램의 내부구조를 변경할 수 있다.
구글은 왜 안드로이드 OS를 무료로 하드웨어제조사에 제공을 하는가?
한국에 게임들은 왜 대부분 온라인게임으로 개발되었는가?
스마트폰에서는 은행서비스를 이용하려면 왜 앱을 이용해야하는가?
서버를 이용하면 더 안전한 이유는 무엇인가?

[네트워크/포톤네트워크/개념]RPC(Remote Procedure call): 원격지에서 함수를 호출한다.
대기열이 필요한 이유를 설명하고, 어떻게 구현해야하는지 구체적으로 계획하기
지식: 자료구조, 배열, 리스트, 
연관: 네트워크, 비동기화프로그래밍(스레드 및 테스크)
비동기화 프로그래밍을 할때 주의해야할것.
비동기화 프로그래밍에서 동적할당을 이용한 경우,
각각의 프로세스와 스레드에서 할당이 먼저 해제되어 문제가 발생하는 경우가 있다.
프로세스에서 다른 스레드의 종료를 대기하는데 join을 이용하여 스레드 종료시 까지 대기시킬수있다.
static클래스는 왜 사용하는가? 객체가 있는 클래스와 무엇이 다른가?
static클래스는 전역변수/변수와 같이 절차지형적으로 코드를 작성하고 싶을때 사용한다.
연구자: 새로운 개념을 정립하고 효율적인 알고리즘을 만드는 것. 
개발자: 기존의 개념을 활용하여 실용적으로 활용할수 있는 프로그램을 제작.

[객체지향]가상함수테이블(v-ptr): 상속과 다형성의 원리를 이해. 
지식: 포인터,함수포인터,동적할당,상속,다형성 - 연관: 콜백
상속을 통하여 자식에서 오버라이드 된 함수를 호출하는 방법.

MFC에서 로그를 찍어 이벤트함수가 호출되는 내용을 확인하는 프로그램 제작하기.
1. 프로그램작성하기: 프로그래머
2. 작업내역서작성하기 -> 피드백: 기획자
3. 용어나 필요한 것은 검색을 통해 획득

알고리즘
-상위 프로그램이 작동하는 순서 정의
-변수(=속성)
-하위 프로그램에 세부동작이 작동 정의(=동작=함수=이벤트)